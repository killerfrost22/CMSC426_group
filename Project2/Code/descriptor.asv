    location = "..\Images\train_images\Set1\";
    curr_img = imread(location + "1.jpg");
    next_img = imread(location + "2.jpg");

    a=dir(location + '*.jpg');
    num_images=size(a,1)
%     tforms(num_images) = projective2d(eye(3));
    imageSize = zeros(num_images,2);
    prev_descriptors = 0;


%     for i =2:imageSize
     % grayscale
     curr_img_grayscale = rgb2gray(curr_img);
     next_img_grayscale = rgb2gray(next_img);

     curr_img_corners = cornermetric(curr_img_grayscale);
     next_img_corners = cornermetric(next_img_grayscale);
     
     % imregional 
     curr_img_maxes = imregionalmax(curr_img_corners);
     next_img_maxes = imregionalmax(next_img_corners);

     % ANMS
     [curr_img_x_best, curr_img_y_best] = ANMS(curr_img, curr_img_maxes, curr_img_corners);
     [next_img_x_best, next_img_y_best] = ANMS(next_img, next_img_maxes, next_img_corners);

     % Display 
     displayANMS(curr_img, curr_img_x_best, curr_img_y_best)
     displayANMS(next_img, next_img_x_best, next_img_y_best)
     

function [descriptors] = feature_descriptors(img_grayscale, x_best, y_best)
    [~, n_best] = size(x_best);
    [y_size, x_size] = size(img_grayscale);
    descriptors = [];
    for indx = 1:n_best
        % Patch is of size 41x41, so point is the actual center
        x = x_best(indx);
        y = y_best(indx);
        % TODO?
        if or(or(or(x <= 20, y<=20), x + 20 > x_size), y + 20 > y_size)
            v = zeros(64,1);
            descriptors = [descriptors v];
            continue;
        end
        patch = img_grayscale(y-20:y+20, x-20:x+20);
        % Now, we take the gaussian blur!
        sig = 10;
        blurred = imgaussfilt(patch, sig);
        % Resize
        resized = imresize(blurred, [8 8]);
        % Reshape
        reshaped = double(reshape(resized, [64, 1]));
        % Now we need to standardize
        std_dev = std(reshaped);
        mean_reshaped = mean(reshaped);
        standardized = reshaped - mean_reshaped;
        standardized = standardized / std_dev;
        descriptors = [descriptors standardized];
    end
end
