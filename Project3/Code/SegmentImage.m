function [BW,maskedImage] = segmentImage(RGB)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(RGB) segments image RGB using
%  auto-generated code from the imageSegmenter app. The final segmentation
%  is returned in BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 06-Nov-2021
%----------------------------------------------------


% Convert RGB image into L*a*b* color space.
X = rgb2lab(RGB);

% Graph cut
foregroundInd = [432635 432637 432639 432640 433296 433299 433302 433311 433312 433313 433314 433316 433318 433319 433320 433321 433322 433323 433324 433964 433994 434660 435302 435317 435320 435322 435325 435968 435970 435984 435985 436636 436637 436650 436652 437305 437317 437319 437973 437985 438641 438653 439307 439309 439322 439974 439990 440643 441310 441328 441978 441996 442646 442665 443315 443333 444002 444671 445340 445992 446010 446679 447331 447348 447960 447962 448627 448686 449295 449305 449963 449977 450009 450024 450632 450679 451302 451363 451971 452018 452658 452688 452701 453311 454028 454041 454652 454698 455992 456010 456050 456663 456680 457333 457378 457390 458004 458048 458060 459345 459360 459388 459399 460017 460031 460058 460688 460701 460738 461359 461399 461408 462042 462069 462701 462747 463372 463382 463409 463417 464044 464053 464081 464086 464752 464756 465385 465423 466096 466725 466737 467437 467438 468067 468079 468104 468106 468107 468737 468775 468781 469407 469421 469439 469442 469453 469456 469458 469461 469462 470094 470105 470135 470137 470748 470766 470767 470769 470771 470773 470810 472088 472152 472153 472824 473429 473495 474166 474167 474769 474839 475439 475510 476183 476780 476856 477450 477527 478198 478791 479462 479541 480133 480803 482143 482223 484153 484235 485493 486162 486246 486830 487495 487586 488159 488257 489495 490163 490269 491501 493510 494178 495516 496186 496303 496855 498210 498211 498212 498314 498864 498878 498879 498883 499553 500203 500217 500224 500325 501543 501556 501565 501666 502883 503007 503576 504235 505589 505688 506233 506243 506930 507573 507699 508243 508272 509592 509615 510255 510957 511051 512265 512299 512935 513611 514276 514311 515072 515621 515652 515742 516286 517626 517664 517753 518296 518301 518967 519006 520308 520312 520982 521652 521687 522323 522358 522991 523663 523700 525041 525795 526383 527724 529066 529146 529736 530408 531156 532419 532497 533760 533837 534507 535101 535848 537113 537189 539199 539794 539870 541135 541880 542476 543220 544489 544560 545230 546571 547841 547912 548583 548585 548586 549183 549259 550525 550601 551196 551273 551945 552536 552617 553288 553878 553927 553928 553929 553930 553959 554549 554597 554602 554603 555267 555300 555890 555936 555944 555945 555972 556562 556606 556616 556642 557287 557314 557905 557906 557945 557958 558578 558581 558655 559252 559254 559299 559926 559954 559970 559998 560624 560642 561268 561270 561293 561294 561313 561963 562010 562611 562612 562633 562654 563285 563303 563325 563352 563958 563973 563995 564023 564632 564633 564636 564638 564644 564666 564694 565310 565311 565983 565986 566007 566008 566035 566654 566706 567326 567327 567349 567350 567376 567996 567998 567999 568000 568001 568022 568046 568673 568692 568716 569339 569341 569344 569345 569346 569363 569376 569377 569380 569382 570017 570034 570035 570036 570037 570038 570040 570041 570044 570054 570682 570683 570688 570725 570726 570727 571355 571361 572025 572696 572703 573368 573374 574711 574716 575383 575387 576058 576724 576725 577396 577397 577399 577400 578067 578738 578739 578742 579410 579412 580081 580083 580753 580754 582094 582095 582096 582767 ];
backgroundInd = [409176 409202 409222 409230 409242 409250 410491 410493 412487 412614 414484 416483 419152 423161 429180 432746 435201 445242 451937 464660 465601 474035 474704 476043 476713 477382 478052 478721 480060 480730 482739 484079 486089 488769 490778 494128 497477 503505 504845 508495 509535 515567 525619 535295 536339 542370 558075 561423 575887 594920 596003 598267 604961 610314 619490 619669 620162 624316 626885 627556 629598 629629 ];
L = superpixels(X,4040,'IsInputLab',true);

% Convert L*a*b* range to [0 1]
scaledX = prepLab(X);
BW = lazysnapping(scaledX,L,foregroundInd,backgroundInd);

% Create masked image.
maskedImage = RGB;
maskedImage(repmat(~BW,[1 1 3])) = 0;
end

function out = prepLab(in)

% Convert L*a*b* image to range [0,1]
out = in;
out(:,:,1) = in(:,:,1) / 100;  % L range is [0 100].
out(:,:,2) = (in(:,:,2) + 86.1827) / 184.4170;  % a* range is [-86.1827,98.2343].
out(:,:,3) = (in(:,:,3) + 107.8602) / 202.3382;  % b* range is [-107.8602,94.4780].

end
